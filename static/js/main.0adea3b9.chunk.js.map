{"version":3,"sources":["components/game/StartGame/Snake/Snake.js","components/game/StartGame/Food/Food.js","components/game/StartGame/Score/Score.js","components/game/StartGame/Log/Log.js","utils.js","components/game/StartGame/StartGame.js","components/Navigation/Navigation.js","components/Header/Header.js","components/Footer/Footer.js","components/BestGames/BestGames.js","components/AudioSettings/AudioSettings.js","components/GameMode/GameMode.js","components/TopPlayers/TopPlayers.js","components/AuthNickName/AuthNickName.js","App.js","reportWebVitals.js","index.js"],"names":["Snake","props","snakeBody","map","body","index","style","left","top","className","JSON","parse","localStorage","getItem","Food","food","Score","counter","Log","lose","to","setLocalStorage","name","value","setItem","stringify","getLocalStorage","updateBestPlayersList","score","a","nickName","player","date","Date","fetch","method","headers","getBestPlayers","response","json","getRandomNumbers","Math","floor","random","volumeOfSound","startState","direction","speed","autoPlay","defaultMode","StartGame","oneKeyDown","e","window","event","keyCode","state","setState","gameExit","checkTheBorder","head","length","checkToCrushByBody","snake","pop","forEach","checkIfEatFood","enlargeSnake","audio","play","newSnake","unshift","document","removeEventListener","clearInterval","timer","backgroundAudio","muted","errorAudio","data","result","push","sort","b","slice","saveToLocalStorageBestGame","moveSnake","directionOfSnake","shift","this","setInterval","addEventListener","Audio","backgroundAudioAction","volume","removeItem","mode","disabled","onClick","React","Component","Navigation","Header","src","fullscreenElement","exitFullscreen","then","console","log","catch","err","error","documentElement","requestFullscreen","Footer","href","alt","BestGame","bestGame","element","AudioSettings","useState","backgroundAudioPlay","setBackgroundAudioPlay","audioEffectPlay","setAudioEffectPlay","volumeBackgroundAudio","setVolumeBackgroundAudio","volumeAudioEffect","setVolumeAudioEffect","useEffect","type","checked","onChange","min","max","target","GameMode","setDefaultMode","setSpeed","crazyMode","setCrazyMode","onChangeFirstForm","onChangeSecondForm","onChangeThirdForm","TopPlayers","setData","loading","setLoading","bestPlayers","AuthNickName","setNickName","App","path","component","BestGames","from","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0adea3b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './snake.css';\r\n\r\nfunction Snake(props) {\r\n    return (\r\n        <div>\r\n            {props.snakeBody.map((body, index) => {\r\n                const style = {\r\n                    left: `${body[0]}%`,\r\n                    top: `${body[1]}%`\r\n                }\r\n                return (\r\n                    <div className={JSON.parse(localStorage.getItem('default-mode')) === false ? 'snake-body' : 'snake-body default'} key={index} style={style} />\r\n                )\r\n            })}\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Snake;","import React from 'react';\r\nimport './food.css'\r\n\r\nfunction Food(props) {    \r\n    const style = {\r\n        left: `${props.food[0]}%`,\r\n        top: `${props.food[1]}%`\r\n    }\r\n    return (\r\n        <div className=\"food\" style={style}/>\r\n    )\r\n}\r\n\r\nexport default Food;","import React from 'react';\r\n\r\nfunction Score(props) {\r\n    return (\r\n    <span>Your score: {props.counter}</span>\r\n    )\r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './log.css'\r\n\r\nfunction Log(props) {\r\n    return (    \r\n        <div className={props.lose ? 'log' : 'log none'}>\r\n            <h2>You was lose</h2>\r\n            <h3>Your score: {props.counter}</h3>\r\n            <NavLink to='/menu'>\r\n                Okay\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Log;","export const saveToLocalStorageBestGame = (score) => {\r\n    const data = JSON.parse(localStorage.getItem('best-game')) || [];\r\n    const result = {\r\n        score: score,\r\n        date: new Date()\r\n    };\r\n    data.push(result);\r\n    data.sort((a, b) => a.score < b.score ? 1 : -1);\r\n    localStorage.setItem('best-game', JSON.stringify(data.slice(0, 10)));\r\n}\r\n\r\nexport const setLocalStorage = (name, value) => {\r\n    localStorage.setItem(name, JSON.stringify(value));\r\n}\r\n\r\nexport const getLocalStorage = (name) => {\r\n    return JSON.parse(localStorage.getItem(name));\r\n}\r\n\r\nexport const nullFn = (value, defaultValue) => {\r\n    if (value === null) {\r\n        return defaultValue;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport const getInitialStateToLocalSotage = () => {\r\n    if (getLocalStorage('default-mode') === null || getLocalStorage('background-audio') === null || getLocalStorage('nick-name') === null) {\r\n        setLocalStorage('default-mode', true);\r\n        setLocalStorage('background-audio', true);\r\n        setLocalStorage('audio-effect', true);\r\n        setLocalStorage('background-audio-volume', 10);\r\n        setLocalStorage('audio-effect-volume', 10);\r\n        setLocalStorage('speed', 50);\r\n        setLocalStorage('nick-name', 'Player' + Math.floor(Math.random() * 100));\r\n        setLocalStorage('first-game', true);\r\n        setLocalStorage('crazy-mode', false);\r\n    }\r\n}\r\n\r\nexport const updateBestPlayersList = async (score) => {\r\n    const nickName = getLocalStorage('nick-name');\r\n    const player = {\r\n        nickName,\r\n        score,\r\n        date: new Date()\r\n    };\r\n\r\n    const response = await fetch('https://react-game123.herokuapp.com/newBestPlayer', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify(player),\r\n    });\r\n}\r\n\r\nexport const getBestPlayers = async () => {\r\n    const response = await fetch('https://react-game123.herokuapp.com/best-players');\r\n    const json = await response.json();\r\n    return json;\r\n}\r\n\r\nexport const getRandomNumbers = () => {\r\n    let min = 1;\r\n    let max = 98;\r\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    return [x,y]\r\n}\r\n\r\nexport const getStateFromLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem('state'));\r\n}\r\n\r\nexport const updateLocalStorage = (state) => {\r\n    localStorage.setItem('state', JSON.stringify(state));\r\n}\r\n\r\nexport const volumeOfSound = (value) => JSON.parse(localStorage.getItem(value)) / 10;\r\n","import React from 'react';\r\nimport Snake from './Snake/Snake';\r\nimport Food from './Food/Food';\r\nimport Score from './Score/Score';\r\nimport Log from './Log/Log';\r\nimport { saveToLocalStorageBestGame,\r\n         getLocalStorage,\r\n         updateBestPlayersList,\r\n         getRandomNumbers,\r\n         getStateFromLocalStorage,\r\n         updateLocalStorage,\r\n         volumeOfSound } from '../../../utils'; \r\nimport './startGame.css';\r\n\r\nlet startState = {\r\n  snakeBody: [\r\n    [0, 0],\r\n    [2, 0]\r\n  ],\r\n  food: getRandomNumbers(),\r\n  direction: 'RIGHT',\r\n  speed: getLocalStorage('speed'),\r\n  counter: 0,\r\n  lose: false,\r\n  autoPlay: false,\r\n  defaultMode: getLocalStorage('default-mode')\r\n}\r\n\r\nclass StartGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (!localStorage.getItem('state')) {\r\n      this.state = startState;\r\n    }\r\n    else { \r\n      this.state = getStateFromLocalStorage();\r\n    }\r\n    this.timer = null;\r\n  }\r\n\r\n  oneKeyDown = (e) => {\r\n    e = e || window.event;\r\n    if (e.keyCode === 38 && this.state.direction != 'DOWN') {\r\n      this.setState({ direction: 'UP' });\r\n    } else if (e.keyCode === 40 && this.state.direction != 'UP') {\r\n      this.setState({ direction: 'DOWN'});\r\n    } else if (e.keyCode === 37 && this.state.direction != 'RIGHT') {\r\n      this.setState({ direction: 'LEFT' });\r\n    } else if (e.keyCode === 39 && this.state.direction != 'LEFT') {\r\n      this.setState({ direction: 'RIGHT' });\r\n    } else if (e.keyCode === 32) {\r\n      this.setState({ lose: true })\r\n      this.gameExit();\r\n    }\r\n  }\r\n\r\n  checkTheBorder = () => {\r\n    let head = this.state.snakeBody[this.state.snakeBody.length - 1];\r\n    if (head[0] >= 100 || head[0] < 0 || head[1] >= 100 || head[1] < 0) {\r\n      this.gameExit();\r\n    }\r\n  }\r\n\r\n  checkToCrushByBody = () => {\r\n    let snake = [...this.state.snakeBody];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n    snake.forEach((body, index) => {\r\n      if (head[0] === body[0] && head[1] === body[1] && index < snake.length - 1) {\r\n        this.gameExit();\r\n      }\r\n    })  \r\n  }\r\n\r\n  checkIfEatFood = () => {\r\n    let head = this.state.snakeBody[this.state.snakeBody.length - 1];\r\n    let food = this.state.food;\r\n\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      this.setState({\r\n        food: getRandomNumbers(),\r\n        counter: this.state.counter + 1\r\n      })\r\n      this.enlargeSnake();\r\n      if (getLocalStorage('audio-effect')) {\r\n        this.audio.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  enlargeSnake = () => {\r\n    let newSnake = [...this.state.snakeBody];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeBody: newSnake\r\n    });\r\n  }\r\n\r\n  gameExit = () => {\r\n    this.setState({ ...startState, lose: true, counter: this.state.counter });\r\n    document.removeEventListener('keydown', this.oneKeyDown);\r\n    clearInterval(this.timer);\r\n    this.backgroundAudio.muted = true;\r\n    if (getLocalStorage('audio-effect')) {\r\n      this.errorAudio.play();\r\n    }\r\n    if (this.state.autoPlay === false) {\r\n      saveToLocalStorageBestGame(this.state.counter);\r\n      updateBestPlayersList(this.state.counter);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    startState.speed = getLocalStorage('speed');\r\n    this.setState({\r\n      speed: getLocalStorage('speed')\r\n    });\r\n\r\n    this.timer = setInterval(this.moveSnake, this.state.speed);\r\n    document.addEventListener('keydown', this.oneKeyDown);\r\n\r\n    this.audio = new Audio('https://english-for-kids.netlify.app/static/media/correct.8e3d6124.mp3');\r\n    this.backgroundAudio = new Audio('https://soundimage.org/wp-content/uploads/2014/08/Netherplace.mp3');\r\n    this.errorAudio = new Audio('https://english-for-kids.netlify.app/static/media/error.32fc22b2.mp3');\r\n    this.backgroundAudioAction = new Audio('https://www.playonloop.com/previews/POL-guilty-one-preview.mp3');\r\n\r\n    this.backgroundAudio.volume = volumeOfSound('background-audio-volume');\r\n    this.audio.volume = volumeOfSound('audio-effect-volume');\r\n    this.errorAudio.volume = volumeOfSound('audio-effect-volume');\r\n    this.backgroundAudioAction.volume = volumeOfSound('background-audio-volume');\r\n\r\n    if (getLocalStorage('background-audio') && getLocalStorage('crazy-mode') && getLocalStorage('speed') === 20) {\r\n      this.backgroundAudioAction.play();\r\n    } else if (getLocalStorage('background-audio')) {\r\n      this.backgroundAudio.play();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfEatFood();\r\n    this.checkTheBorder();\r\n    this.checkToCrushByBody();\r\n    updateLocalStorage(this.state);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.lose) {\r\n      localStorage.removeItem('state');\r\n    }\r\n    if (this.state.autoPlay === true) {\r\n      this.setState({\r\n        ...startState, autoPlay: true\r\n      });\r\n    }\r\n    this.backgroundAudio.muted = true;\r\n    this.audio.muted = true;\r\n    this.errorAudio.muted = true;\r\n    this.backgroundAudioAction.muted = true;\r\n    clearInterval(this.timer);\r\n    \r\n  }\r\n\r\n  moveSnake = () => {\r\n    let body = [...this.state.snakeBody];\r\n    let head = body[body.length - 1];\r\n    let directionOfSnake = this.state.direction;\r\n    let food = [...this.state.food];\r\n\r\n    if (directionOfSnake === 'RIGHT') {\r\n      head = [head[0] + 2, head[1]];\r\n    } else if (directionOfSnake === 'LEFT') {\r\n      head = [head[0] - 2, head[1]];\r\n    } else if (directionOfSnake === 'UP') {\r\n      head = [head[0], head[1] - 2];\r\n    } else if (directionOfSnake === 'DOWN') {\r\n      head = [head[0], head[1] + 2];\r\n    }\r\n\r\n    body.push(head);\r\n    body.shift();\r\n    this.setState({\r\n      snakeBody: body\r\n    })\r\n    if (this.state.autoPlay === true) {\r\n      if (head[0] === food[0] && head[1] < food[1]) {\r\n        this.setState({\r\n          direction: 'DOWN'\r\n        });\r\n      } else if (head[0] === food[0] && head[1] > food[1]) {\r\n        this.setState({\r\n        direction: 'UP'\r\n        });\r\n      } else if (head[0] < food[0]) {\r\n        this.setState({\r\n          direction: 'RIGHT'\r\n        });\r\n      }\r\n      else if (head[0] > food[0]) {\r\n        this.setState({\r\n          direction: 'LEFT'\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game-container\">\r\n        <div className={getLocalStorage('default-mode') === true ? 'game-field default' : 'game-field'}>\r\n          <Snake snakeBody={this.state.snakeBody} mode={this.state.defaultMode}/>\r\n          <Food food={this.state.food} />\r\n          <Log lose={this.state.lose} counter={this.state.counter}/>\r\n        </div>\r\n        <div className=\"panel\">\r\n          <button disabled={this.state.lose} onClick={() => this.setState(startState)}>New game</button>\r\n          <Score counter={this.state.counter} />\r\n          <button disabled={this.state.lose} onClick={() => this.setState({...startState, autoPlay: true })}>Autoplay</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartGame;\r\n","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './navigation.css';\r\n\r\nfunction Navigation () {\r\n    return (\r\n        <ul className=\"navigation\">\r\n            <li>\r\n                <NavLink to=\"/start-game\">Start Game</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/game-mode\">Game mode</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/audio-effect\">Settings</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/best-game\">Statistics</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/top-players\">Top players</NavLink>\r\n            </li>\r\n             \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n\r\n    const onClickFullScreen = (event) => {\r\n        if (document.fullscreenElement) {\r\n            document.exitFullscreen()\r\n              .then(() => console.log(\"Document Exited from Full screen mode\"))\r\n              .catch((err) => console.error(err))\r\n          } else {\r\n            document.documentElement.requestFullscreen();\r\n          }\r\n    }\r\n     \r\n    return (\r\n        <div className=\"header\">\r\n            <NavLink to=\"/menu\"><img className=\"back-arrow\" src=\"https://img.icons8.com/carbon-copy/100/000000/circled-left.png\"/></NavLink>\r\n            <img className=\"full-screen\" onClick={onClickFullScreen} src=\"https://img.icons8.com/wired/64/000000/full-screen.png\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <span>Created by: &nbsp;</span>\r\n            <a href=\"https://github.com/DimaKukhta\">Dima Kukhta &nbsp;</a>\r\n            <span>for &nbsp;</span>\r\n            <a href=\"https://rs.school/js/\">Rolling Scope School &nbsp;</a>\r\n           <img className=\"logo-course\" src=\"https://rs.school/images/rs_school_js.svg\" alt=\"logo-course\" /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst getBestGames = () => {\r\n    return JSON.parse(localStorage.getItem('best-game')) || [];\r\n}\r\n\r\nconst BestGame = () => {\r\n    let bestGame = getBestGames();\r\n    bestGame = bestGame.map((element, index) => <li key={index}>{index + 1}. Score: {element.score}, {element.date}</li>);\r\n    return (\r\n        <ul>\r\n            <li>Best score / date</li>\r\n            {bestGame}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default BestGame;","import React, { useState, useEffect } from 'react';\r\nimport { setLocalStorage, getLocalStorage } from '../../utils';\r\n\r\nconst AudioSettings = () => {\r\n    const [backgroundAudioPlay, setBackgroundAudioPlay] = useState(getLocalStorage('background-audio'));\r\n    const [audioEffectPlay, setAudioEffectPlay] = useState(getLocalStorage('audio-effect'));\r\n    const [volumeBackgroundAudio, setVolumeBackgroundAudio] = useState(getLocalStorage('background-audio-volume'));\r\n    const [volumeAudioEffect, setVolumeAudioEffect] = useState(getLocalStorage('audio-effect-volume'));\r\n    \r\n    useEffect(() => {\r\n        setLocalStorage('background-audio', backgroundAudioPlay);\r\n    }, [backgroundAudioPlay]);\r\n\r\n    useEffect(() => {\r\n        setLocalStorage('audio-effect', audioEffectPlay);\r\n    }, [audioEffectPlay])\r\n\r\n\r\n    const changeVolumeOfBackgroundAudio = (e) => {\r\n        setVolumeBackgroundAudio(e.target.value);\r\n        setLocalStorage('background-audio-volume', e.target.value);\r\n    }\r\n\r\n    const changeVolumeOfAudioEffect = (e) => {\r\n        setVolumeAudioEffect(e.target.value);\r\n        setLocalStorage('audio-effect-volume', e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Background audio</h3>\r\n    \r\n            <label> On / off  \r\n                <input type=\"checkbox\"\r\n                    name=\"backgroundAudio\"\r\n                    checked={backgroundAudioPlay}\r\n                    onChange={() => setBackgroundAudioPlay(!backgroundAudioPlay)}\r\n                    />\r\n            </label>\r\n            <div>Volume of background audio</div>\r\n            <input type=\"range\" \r\n                name=\"volumeOfBackgroundAudio\" \r\n                min=\"1\" \r\n                max=\"10\" \r\n                value={volumeBackgroundAudio} \r\n                onChange={changeVolumeOfBackgroundAudio} \r\n                />\r\n            <span> {volumeBackgroundAudio * 10 + '%'} </span>\r\n            <h3>Audio Effect</h3>\r\n            <label>On / off\r\n                <input \r\n                    type=\"checkbox\"\r\n                    name=\"audioEffect\"\r\n                    checked={audioEffectPlay}\r\n                    onChange={() => setAudioEffectPlay(!audioEffectPlay)}\r\n                    />\r\n            </label>\r\n            <div>Volume of audio effects</div>\r\n             <input type=\"range\" \r\n                name=\"volumeOfAudioEffect\" \r\n                min=\"1\" \r\n                max=\"10\" \r\n                value={volumeAudioEffect} \r\n                onChange={changeVolumeOfAudioEffect} \r\n                />\r\n            <span> {volumeAudioEffect * 10 + '%'} </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AudioSettings;","import React, { useState, useEffect } from 'react';\r\nimport { setLocalStorage, getLocalStorage } from '../../utils';\r\n\r\n\r\nconst GameMode = () => {\r\n    const [defaultMode, setDefaultMode] = useState(getLocalStorage('default-mode'));\r\n    const [speed, setSpeed] = useState(getLocalStorage('speed'));\r\n    const [crazyMode, setCrazyMode] = useState(getLocalStorage('crazy-mode'));\r\n\r\n    useEffect(() => {\r\n        setLocalStorage('default-mode', defaultMode);\r\n    }, [defaultMode]);\r\n\r\n    useEffect(() => {\r\n        setLocalStorage('speed', speed);\r\n    }, [speed]);\r\n\r\n    useEffect(() => {\r\n        setLocalStorage('crazy-mode', crazyMode);\r\n        if (crazyMode) {\r\n            setSpeed(20);\r\n        }\r\n    }, [crazyMode])\r\n\r\n    const onChangeFirstForm = () => {\r\n        setDefaultMode(!defaultMode);\r\n    }\r\n\r\n    const onChangeSecondForm = (e) => {\r\n        const fastSpeed = 25;\r\n        const slowSpeed = 50;\r\n        const extremeSpeed = 20;\r\n        if (e.target.value === 'slow') {\r\n            setSpeed(slowSpeed);\r\n        } else if (e.target.value === 'fast') {\r\n            setSpeed(fastSpeed);\r\n        } else {\r\n            setSpeed(extremeSpeed);\r\n        }\r\n    }\r\n\r\n    const onChangeThirdForm = () => {\r\n        setCrazyMode(!crazyMode);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <p>The style of game field:</p>\r\n                <p><input name=\"theme\" type=\"radio\" value=\"light\" checked={!defaultMode} onChange={onChangeFirstForm}/> Light</p>\r\n                <p><input name=\"theme\" type=\"radio\" value=\"dark\" checked={defaultMode} onChange={onChangeFirstForm}/> Dark</p>\r\n            </form>\r\n            <form>\r\n                <p>The speed of game:</p>\r\n                <p><input name=\"speed\" type=\"radio\" value=\"slow\" checked={speed === 50} onChange={onChangeSecondForm}/> Slow</p>\r\n                <p><input name=\"speed\" type=\"radio\" value=\"fast\" checked={speed === 25} onChange={onChangeSecondForm}/> Fast</p>\r\n                <p><input name=\"speed\" type=\"radio\" value=\"extreme\" checked={speed === 20} onChange={onChangeSecondForm}/> Extreme</p>\r\n            </form>\r\n            <form>\r\n                <p>Crazy mode:</p>\r\n                <p><input name=\"crazyMode\" type=\"radio\" value=\"on\" checked={crazyMode} onChange={onChangeThirdForm}/> On</p>\r\n                <p><input name=\"crazyMode\" type=\"radio\" value=\"of\" checked={!crazyMode} onChange={onChangeThirdForm}/> Off</p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameMode;","import React, { useState, useEffect } from 'react';\r\nimport { getBestPlayers } from './../../utils';\r\nimport './topPlayers.css';\r\n\r\n\r\n\r\nconst TopPlayers = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect( async () => {\r\n        const bestPlayers = await getBestPlayers();\r\n        setData(bestPlayers);\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (data.length) {\r\n            setLoading(false);\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n            ?   <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            :   <ul>\r\n                    <li>Nick-name / score / date</li>\r\n                    {data.map((element, index) => <li key={index}>{index + 1}. {element.nickName}, {element.score}, {element.date}</li>)}\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopPlayers;","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getLocalStorage, setLocalStorage } from '../../utils';\r\nimport './authNickName.css';\r\n\r\n\r\nconst AuthNickName = () => {\r\n    const [nickName, setNickName] = useState(getLocalStorage('nick-name') || '');\r\n\r\n    const handleChange = (e) => {\r\n        setNickName(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        setLocalStorage('first-game', false);\r\n        setLocalStorage('nick-name', nickName);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label className=\"label-auth\">\r\n                Enter your nick-name\r\n                <input \r\n                    className=\"input-nick-name\"\r\n                    type=\"text\" \r\n                    value={nickName} \r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <NavLink to=\"/menu\"\r\n                className=\"submit-button\"\r\n                onClick={handleSubmit}>Save</NavLink>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AuthNickName;","import React from 'react';\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom'\nimport StartGame from './components/game/StartGame/StartGame';\nimport Navigation from './components/Navigation/Navigation';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport BestGames from './components/BestGames/BestGames';\nimport AudioSettings from './components/AudioSettings/AudioSettings';\nimport GameMode from './components/GameMode/GameMode';\nimport TopPlayers from './components/TopPlayers/TopPlayers';\nimport AuthNickName from './components/AuthNickName/AuthNickName';\nimport { getInitialStateToLocalSotage, getLocalStorage } from './utils';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    getInitialStateToLocalSotage();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"game\">\n          <Header />\n          <Route path=\"/start-game\" component={StartGame}></Route>\n          <Route path=\"/menu\" component={Navigation}></Route>\n          <Route path=\"/best-game\" component={BestGames}></Route>\n          <Route path=\"/audio-effect\" component={AudioSettings}></Route>\n          <Route path=\"/game-mode\" component={GameMode}></Route>\n          <Route path=\"/top-players\" component={TopPlayers}></Route>\n          <Route path=\"/auth-nickName\" component={AuthNickName}></Route>\n          {getLocalStorage('first-game') ? <Redirect from=\"*\" to=\"/auth-nickName\"></Redirect> : <Redirect exact from=\"/\" to=\"/menu\"></Redirect>}\n          <Footer />\n       </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}